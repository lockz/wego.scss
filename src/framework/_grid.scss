@charset "UTF-8";


/**
*	Строка.
*/
.row {
	margin-left: ceil(($grid-gutter / -2));
	margin-right: floor(($grid-gutter / -2));
	@include clearfix();
}


/**
*	Общий стиль для всех колонн.
*	@output Выводит общий стиль для всех колонн.
*/
@mixin make-columns-default() {
	$list: "";

	@for $i from 1 through $grid-count {
		$list: "#{$list} .col-#{$i},";

		@each $name, $size in $screens {
			$list: "#{$list} .col-#{$name}-#{$i},";
		}
	}

	$list: str-slice($list, 1, -2);

	#{$list} {
		position: relative;
		float: left;
		padding-left: ceil($grid-gutter / 2);
		padding-right: floor($grid-gutter / 2);
		min-height: 1px;
	}
}


/**
*	Стили колонн для всех экранов.
*	@output Выводит все стили для всех колонн и экранов.
*/
@mixin make-columns-screen() {
	@include make-columns();

	@each $name, $size in $screens {
		@include respond-to($name) {
			@include make-columns($name);
		}
	}
}


/**
*	Создание колонн для экранов.
*	@param {string} $screen [""] - название размера экрана.
*	@output Выводит стиль для колонн заданного экрана.
*/
@mixin make-columns($screen: "") {
	@if $screen != "" {
		$screen: $screen + "-";
	}

	@for $i from 1 through $grid-count {
		$col-width: $i / $grid-count;

		.col-#{$screen}#{$i} {
			width: percentage($col-width);

			@if ($screen == "") or ($screen == "lg-") {
				@include respond-to(xs) {
					width: 100%;
				}
			}
		}

		.offset-#{$screen}#{$i} {
			margin-left: percentage($col-width);

			@if ($screen == "") or ($screen == "lg-") {
				@include respond-to(xs) {
					margin-left: 0;
				}
			}
		}

		.push-#{$screen}#{$i} {
			left: percentage($i / $grid-count);
		}

		.pull-#{$screen}#{$i} {
			right: percentage($i / $grid-count);
		}
	}

	.offset-#{$screen}0 {
		margin-left: 0;
	}

	.push-#{$screen}0 {
		left: auto;
	}

	.pull-#{$screen}0 {
		right: auto;
	}
}


@include make-columns-default();

@include make-columns-screen();