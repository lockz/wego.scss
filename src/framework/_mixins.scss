@charset 'UTF-8';


/**
*	Responsive.
*/
@mixin respond-to($size) {
	// To avoid bug with horizontal scroll
	$scroll-width: 20px;

	@if ($size == lg) {
		$min_width: map-get($screens, 'lg') + $grid_gutter + $scroll-width;
		@media screen and (min-width: $min_width) { @content; }
	}

	@else if ($size == md) {
		$max_width: map-get($screens, 'lg') + $grid_gutter + $scroll-width - 1;
		$min_width: map-get($screens, 'md') + $grid_gutter + $scroll-width;
		@media screen and (min-width: $min_width) and (max-width: $max_width) { @content; }
	}

	@else if ($size == sm) {
		$max_width: map-get($screens, 'md') + $grid_gutter + $scroll-width - 1;
		$min_width: map-get($screens, 'sm') + $grid_gutter + $scroll-width;
		@media screen and (min-width: $min_width) and (max-width: $max_width) { @content; }
	}

	@else if ($size == xs) {
		$max_width: map-get($screens, 'sm') + $grid_gutter + $scroll-width - 1;
		@media screen and (max-width: $max_width) { @content; }
	}

	@else {
		@warn 'Unknown size type `#{$size}`';
	}
}


/**
*	Multiple responsive.
*/
@mixin respond($sizes...) {
	@each $size in $sizes {
		@include respond-to($size) {
			@content;
		}
	}
}


/**
*	Clearfix.
*/
@mixin clearfix() {
	&:before, &:after {
		content: '';
		display: table;
	}
	&:after {
		clear: both;
	}
}


/**
*	Single line ellipsed text.
*/
@mixin text-ellipsed() {
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}


/**
*	Miltiline ellipsed text.
*/
@mixin text-ellipsed-multiline($height, $lines, $is_link) {
	max-height: $height;
	overflow: hidden;
	&:before {
		float: left;
		width: 5px;
		height: $height;
		content: "";
	}
	&:after {
		position: relative;
		top: -($height / $lines);
		left: 100%;
		float: right;
		margin-left: -3em;
		padding-right: 5px;
		width: 3em;
		text-align: right;
		content: "\2026";
		@include background-image(linear-gradient(to right, rgba(#fff, 0.0), #fff 60%));
	}
	span {
		float: right;
		width: 100%;
		margin-left: -5px;
		text-align: justify;
	}
	@if $is_link {
		&:hover span { text-decoration: underline; }
	}
}


/**
*	Тень, принимает значения от 1 до 6.
*/
@mixin z-depth($level) {
	@if $level < 1 or $level > 6 {
		@include box-shadow(none);
	} @else {
		$offset: nth(1.5 3 10 14 19 25, $level) * 1px;
		$blur: nth(1.5 3 10 14 19 25, $level) * 4px;
		$color: rgba(#000, nth(.12 .16 .19 .25 .30 .36, $level));
		$top-shadow: 0 $offset $blur $color;
		
		$offset: nth(1.5 3 6 10 15 21, $level) * 1px;
		$blur: nth(1 3 3 5 6 7, $level) * 4px;
		$color: rgba(#000, nth(.24 .23 .23 .22 .22 .21, $level));
		$bottom-shadow: 0 $offset $blur $color;

		@include box-shadow($top-shadow, $bottom-shadow);
	}
}


/**
*	Scrollbar like iPhone (webkit only).
*/
@mixin scrollbar() {
	&::-webkit-scrollbar {
		width: 6px;
	}
	&::-webkit-scrollbar-track {
		background-color: transparent;
		&:hover {
			background-color: #fff;
		}
	}
	&::-webkit-scrollbar-thumb {
		background-color: #ccc;
		&:hover {
			background-color: #aaa;
		}
	}
}


/**
*	Плавная анимация.
*/
@mixin fade() {
	@include transition(all $transition-duration $ease-out);
}